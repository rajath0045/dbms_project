{"ast":null,"code":"var _jsxFileName = \"/Users/rajath/Desktop/dbproject/frontend/src/contexts/CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const addToCart = async (product, quantity = 1) => {\n    setCart(prevCart => {\n      // Check if product already exists in cart\n      const existingItemIndex = prevCart.findIndex(item => item.id === product.id);\n      if (existingItemIndex >= 0) {\n        // Update quantity if product exists\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex] = {\n          ...updatedCart[existingItemIndex],\n          quantity: quantity\n        };\n        return updatedCart;\n      } else {\n        // Add new product with quantity\n        return [...prevCart, {\n          ...product,\n          quantity\n        }];\n      }\n    });\n  };\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n  };\n  const clearCart = () => {\n    setCart([]);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cart,\n      addToCart,\n      removeFromCart,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cart","setCart","addToCart","product","quantity","prevCart","existingItemIndex","findIndex","item","id","updatedCart","removeFromCart","productId","filter","clearCart","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["/Users/rajath/Desktop/dbproject/frontend/src/contexts/CartContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n\n  const addToCart = async (product, quantity = 1) => {\n    setCart(prevCart => {\n      // Check if product already exists in cart\n      const existingItemIndex = prevCart.findIndex(item => item.id === product.id);\n      \n      if (existingItemIndex >= 0) {\n        // Update quantity if product exists\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex] = {\n          ...updatedCart[existingItemIndex],\n          quantity: quantity\n        };\n        return updatedCart;\n      } else {\n        // Add new product with quantity\n        return [...prevCart, { ...product, quantity }];\n      }\n    });\n  };\n\n  const removeFromCart = (productId) => {\n    setCart(prevCart => prevCart.filter(item => item.id !== productId));\n  };\n\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  return (\n    <CartContext.Provider value={{ cart, addToCart, removeFromCart, clearCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nexport const useCart = () => {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,SAAS,GAAG,MAAAA,CAAOC,OAAO,EAAEC,QAAQ,GAAG,CAAC,KAAK;IACjDH,OAAO,CAACI,QAAQ,IAAI;MAClB;MACA,MAAMC,iBAAiB,GAAGD,QAAQ,CAACE,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;MAE5E,IAAIH,iBAAiB,IAAI,CAAC,EAAE;QAC1B;QACA,MAAMI,WAAW,GAAG,CAAC,GAAGL,QAAQ,CAAC;QACjCK,WAAW,CAACJ,iBAAiB,CAAC,GAAG;UAC/B,GAAGI,WAAW,CAACJ,iBAAiB,CAAC;UACjCF,QAAQ,EAAEA;QACZ,CAAC;QACD,OAAOM,WAAW;MACpB,CAAC,MAAM;QACL;QACA,OAAO,CAAC,GAAGL,QAAQ,EAAE;UAAE,GAAGF,OAAO;UAAEC;QAAS,CAAC,CAAC;MAChD;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMO,cAAc,GAAIC,SAAS,IAAK;IACpCX,OAAO,CAACI,QAAQ,IAAIA,QAAQ,CAACQ,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKG,SAAS,CAAC,CAAC;EACrE,CAAC;EAED,MAAME,SAAS,GAAGA,CAAA,KAAM;IACtBb,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,IAAI;MAAEE,SAAS;MAAES,cAAc;MAAEG;IAAU,CAAE;IAAAhB,QAAA,EACzEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrB,EAAA,CApCWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAsCzB,OAAO,MAAMyB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAGhC,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAAC4B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
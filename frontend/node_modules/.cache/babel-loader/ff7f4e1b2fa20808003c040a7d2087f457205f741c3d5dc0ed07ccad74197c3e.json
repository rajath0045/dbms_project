{"ast":null,"code":"var _jsxFileName = \"/Users/rajath/Desktop/dbproject/frontend/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport LoginForm from '../components/auth/LoginForm';\nimport AuthService from '../services/auth.service';\nimport { Button, Box } from '@mui/material';\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async formData => {\n    try {\n      var _AuthService$getCurre;\n      const response = await AuthService.login(formData.username, formData.password);\n      const role = (_AuthService$getCurre = AuthService.getCurrentUser()) === null || _AuthService$getCurre === void 0 ? void 0 : _AuthService$getCurre.role;\n\n      // Redirect based on role\n      if (role === 'customer') {\n        navigate('/customer/dashboard');\n      } else if (role === 'supplier') {\n        navigate('/supplier/dashboard');\n      } else {\n        setError('Invalid role or authentication error');\n      }\n    } catch (err) {\n      setError(err.error || 'An error occurred during login');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n      onSubmit: handleLogin,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2,\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(AdminPanelSettingsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 22\n        }, this),\n        onClick: () => navigate('/admin/login'),\n        sx: {\n          mt: 1\n        },\n        children: \"Login as Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"iYeoHZ50hDVhDOjNvGr4rV7yYW4=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Link","LoginForm","AuthService","Button","Box","AdminPanelSettingsIcon","jsxDEV","_jsxDEV","LoginPage","_s","error","setError","navigate","handleLogin","formData","_AuthService$getCurre","response","login","username","password","role","getCurrentUser","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","sx","mt","display","flexDirection","gap","alignItems","to","variant","startIcon","onClick","_c","$RefreshReg$"],"sources":["/Users/rajath/Desktop/dbproject/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport LoginForm from '../components/auth/LoginForm';\nimport AuthService from '../services/auth.service';\nimport { Button, Box } from '@mui/material';\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\n\nconst LoginPage = () => {\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async (formData) => {\n    try {\n      const response = await AuthService.login(formData.username, formData.password);\n      const role = AuthService.getCurrentUser()?.role;\n      \n      // Redirect based on role\n      if (role === 'customer') {\n        navigate('/customer/dashboard');\n      } else if (role === 'supplier') {\n        navigate('/supplier/dashboard');\n      } else {\n        setError('Invalid role or authentication error');\n      }\n    } catch (err) {\n      setError(err.error || 'An error occurred during login');\n    }\n  };\n\n  return (\n    <div className=\"auth-page\">\n      <LoginForm onSubmit={handleLogin} error={error} />\n      <Box sx={{ mt: 2, display: 'flex', flexDirection: 'column', gap: 2, alignItems: 'center' }}>\n        <p>\n          Don't have an account? <Link to=\"/signup\">Sign up</Link>\n        </p>\n        <Button\n          variant=\"outlined\"\n          startIcon={<AdminPanelSettingsIcon />}\n          onClick={() => navigate('/admin/login')}\n          sx={{ mt: 1 }}\n        >\n          Login as Admin\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
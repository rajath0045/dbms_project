{"ast":null,"code":"import api from '../utils/axios.config';\nconst AuthService = {\n  login: async (username, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        username,\n        password\n      });\n      const {\n        token,\n        role,\n        supplierId\n      } = response.data;\n\n      // Store all necessary data\n      localStorage.setItem('token', token);\n      localStorage.setItem('userData', JSON.stringify({\n        role,\n        supplierId\n      }));\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  signup: async formData => {\n    try {\n      console.log(\"form\", formData);\n      const response = await api.post('/auth/register', {\n        username: formData.username,\n        password: formData.password,\n        role: formData.role,\n        phone: formData.phone,\n        address: formData.address,\n        sname: formData.sname,\n        scontact: formData.scontact,\n        company_name: formData.company_name\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  },\n  getCurrentUser: () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return null;\n      const decoded = JSON.parse(atob(token.split('.')[1]));\n      console.log('Decoded token:', decoded);\n      return decoded;\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  },\n  getRole: () => {\n    return localStorage.getItem('role');\n  }\n};\nexport default AuthService;","map":{"version":3,"names":["api","AuthService","login","username","password","response","post","token","role","supplierId","data","localStorage","setItem","JSON","stringify","error","signup","formData","console","log","phone","address","sname","scontact","company_name","_error$response","message","logout","removeItem","getCurrentUser","getItem","decoded","parse","atob","split","getRole"],"sources":["/Users/rajath/Desktop/dbproject/frontend/src/services/auth.service.js"],"sourcesContent":["import api from '../utils/axios.config';\n\nconst AuthService = {\n  login: async (username, password) => {\n    try {\n      const response = await api.post('/auth/login', { username, password });\n      const { token, role, supplierId } = response.data;\n      \n      // Store all necessary data\n      localStorage.setItem('token', token);\n      localStorage.setItem('userData', JSON.stringify({ role, supplierId }));\n      \n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  signup: async (formData) => {\n    try {\n        console.log(\"form\",formData);\n      const response = await api.post('/auth/register', {\n        username: formData.username,\n        password: formData.password,\n        role: formData.role,\n        phone: formData.phone,\n        address: formData.address,\n        sname: formData.sname,\n        scontact: formData.scontact,\n        company_name: formData.company_name\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  },\n\n  getCurrentUser: () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) return null;\n      \n      const decoded = JSON.parse(atob(token.split('.')[1]));\n      console.log('Decoded token:', decoded);\n      return decoded;\n    } catch (error) {\n      console.error('Error decoding token:', error);\n      return null;\n    }\n  },\n\n  getRole: () => {\n    return localStorage.getItem('role');\n  }\n};\n\nexport default AuthService;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,uBAAuB;AAEvC,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,aAAa,EAAE;QAAEH,QAAQ;QAAEC;MAAS,CAAC,CAAC;MACtE,MAAM;QAAEG,KAAK;QAAEC,IAAI;QAAEC;MAAW,CAAC,GAAGJ,QAAQ,CAACK,IAAI;;MAEjD;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,KAAK,CAAC;MACpCI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,IAAI;QAAEC;MAAW,CAAC,CAAC,CAAC;MAEtE,OAAOJ,QAAQ,CAACK,IAAI;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDC,MAAM,EAAE,MAAOC,QAAQ,IAAK;IAC1B,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,MAAM,EAACF,QAAQ,CAAC;MAC9B,MAAMZ,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,gBAAgB,EAAE;QAChDH,QAAQ,EAAEc,QAAQ,CAACd,QAAQ;QAC3BC,QAAQ,EAAEa,QAAQ,CAACb,QAAQ;QAC3BI,IAAI,EAAES,QAAQ,CAACT,IAAI;QACnBY,KAAK,EAAEH,QAAQ,CAACG,KAAK;QACrBC,OAAO,EAAEJ,QAAQ,CAACI,OAAO;QACzBC,KAAK,EAAEL,QAAQ,CAACK,KAAK;QACrBC,QAAQ,EAAEN,QAAQ,CAACM,QAAQ;QAC3BC,YAAY,EAAEP,QAAQ,CAACO;MACzB,CAAC,CAAC;MACF,OAAOnB,QAAQ,CAACK,IAAI;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAU,eAAA;MACd,MAAM,EAAAA,eAAA,GAAAV,KAAK,CAACV,QAAQ,cAAAoB,eAAA,uBAAdA,eAAA,CAAgBf,IAAI,KAAIK,KAAK,CAACW,OAAO;IAC7C;EACF,CAAC;EAEDC,MAAM,EAAEA,CAAA,KAAM;IACZhB,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;IAChCjB,YAAY,CAACiB,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDC,cAAc,EAAEA,CAAA,KAAM;IACpB,IAAI;MACF,MAAMtB,KAAK,GAAGI,YAAY,CAACmB,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACvB,KAAK,EAAE,OAAO,IAAI;MAEvB,MAAMwB,OAAO,GAAGlB,IAAI,CAACmB,KAAK,CAACC,IAAI,CAAC1B,KAAK,CAAC2B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrDhB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEY,OAAO,CAAC;MACtC,OAAOA,OAAO;IAChB,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACdG,OAAO,CAACH,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,OAAO,IAAI;IACb;EACF,CAAC;EAEDoB,OAAO,EAAEA,CAAA,KAAM;IACb,OAAOxB,YAAY,CAACmB,OAAO,CAAC,MAAM,CAAC;EACrC;AACF,CAAC;AAED,eAAe7B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
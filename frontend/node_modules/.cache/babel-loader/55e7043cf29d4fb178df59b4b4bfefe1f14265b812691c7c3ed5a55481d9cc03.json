{"ast":null,"code":"var _jsxFileName = \"/Users/rajath/Desktop/dbproject/frontend/src/pages/LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport LoginForm from '../components/auth/LoginForm';\nimport AuthService from '../services/auth.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async formData => {\n    try {\n      var _AuthService$getCurre;\n      const response = await AuthService.login(formData.username, formData.password);\n      const role = (_AuthService$getCurre = AuthService.getCurrentUser()) === null || _AuthService$getCurre === void 0 ? void 0 : _AuthService$getCurre.role;\n\n      // Redirect based on role\n      if (role === 'customer') {\n        navigate('/customer/dashboard');\n      } else if (role === 'supplier') {\n        navigate('/supplier/dashboard');\n      } else {\n        setError('Invalid role or authentication error');\n      }\n    } catch (err) {\n      setError(err.error || 'An error occurred during login');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-page\",\n    children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n      onSubmit: handleLogin,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"iYeoHZ50hDVhDOjNvGr4rV7yYW4=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Link","LoginForm","AuthService","jsxDEV","_jsxDEV","LoginPage","_s","error","setError","navigate","handleLogin","formData","_AuthService$getCurre","response","login","username","password","role","getCurrentUser","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/rajath/Desktop/dbproject/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport LoginForm from '../components/auth/LoginForm';\nimport AuthService from '../services/auth.service';\n\nconst LoginPage = () => {\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleLogin = async (formData) => {\n    try {\n      const response = await AuthService.login(formData.username, formData.password);\n      const role = AuthService.getCurrentUser()?.role;\n      \n      // Redirect based on role\n      if (role === 'customer') {\n        navigate('/customer/dashboard');\n      } else if (role === 'supplier') {\n        navigate('/supplier/dashboard');\n      } else {\n        setError('Invalid role or authentication error');\n      }\n    } catch (err) {\n      setError(err.error || 'An error occurred during login');\n    }\n  };\n\n  return (\n    <div className=\"auth-page\">\n      <LoginForm onSubmit={handleLogin} error={error} />\n      <p>\n        Don't have an account? <Link to=\"/signup\">Sign up</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,IAAI,QAAQ,kBAAkB;AACpD,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAOC,WAAW,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACtC,IAAI;MAAA,IAAAC,qBAAA;MACF,MAAMC,QAAQ,GAAG,MAAMX,WAAW,CAACY,KAAK,CAACH,QAAQ,CAACI,QAAQ,EAAEJ,QAAQ,CAACK,QAAQ,CAAC;MAC9E,MAAMC,IAAI,IAAAL,qBAAA,GAAGV,WAAW,CAACgB,cAAc,CAAC,CAAC,cAAAN,qBAAA,uBAA5BA,qBAAA,CAA8BK,IAAI;;MAE/C;MACA,IAAIA,IAAI,KAAK,UAAU,EAAE;QACvBR,QAAQ,CAAC,qBAAqB,CAAC;MACjC,CAAC,MAAM,IAAIQ,IAAI,KAAK,UAAU,EAAE;QAC9BR,QAAQ,CAAC,qBAAqB,CAAC;MACjC,CAAC,MAAM;QACLD,QAAQ,CAAC,sCAAsC,CAAC;MAClD;IACF,CAAC,CAAC,OAAOW,GAAG,EAAE;MACZX,QAAQ,CAACW,GAAG,CAACZ,KAAK,IAAI,gCAAgC,CAAC;IACzD;EACF,CAAC;EAED,oBACEH,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA,CAACH,SAAS;MAACqB,QAAQ,EAAEZ,WAAY;MAACH,KAAK,EAAEA;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDtB,OAAA;MAAAiB,QAAA,GAAG,yBACsB,eAAAjB,OAAA,CAACJ,IAAI;QAAC2B,EAAE,EAAC,SAAS;QAAAN,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9BID,SAAS;EAAA,QAEIN,WAAW;AAAA;AAAA6B,EAAA,GAFxBvB,SAAS;AAgCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
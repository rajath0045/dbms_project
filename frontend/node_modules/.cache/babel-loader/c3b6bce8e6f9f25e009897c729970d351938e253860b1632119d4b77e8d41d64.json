{"ast":null,"code":"import api from '../utils/axios.config';\nconst getCurrentUser = () => {\n  const token = localStorage.getItem('token');\n  const userData = localStorage.getItem('userData');\n  if (!userData) {\n    return null;\n  }\n  try {\n    return JSON.parse(userData);\n  } catch (error) {\n    console.error('Error parsing user data:', error);\n    return null;\n  }\n};\nconst AuthService = {\n  login: async (username, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        username,\n        password\n      });\n      const {\n        token,\n        role,\n        supplierId\n      } = response.data;\n\n      // Store all necessary data\n      localStorage.setItem('token', token);\n      localStorage.setItem('userData', JSON.stringify({\n        role,\n        supplierId\n      }));\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  signup: async formData => {\n    try {\n      console.log(\"form\", formData);\n      const response = await api.post('/auth/register', {\n        username: formData.username,\n        password: formData.password,\n        role: formData.role,\n        phone: formData.phone,\n        address: formData.address,\n        sname: formData.sname,\n        scontact: formData.scontact,\n        company_name: formData.company_name\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  },\n  getCurrentUser,\n  getRole: () => {\n    return localStorage.getItem('role');\n  }\n};\nexport default AuthService;","map":{"version":3,"names":["api","getCurrentUser","token","localStorage","getItem","userData","JSON","parse","error","console","AuthService","login","username","password","response","post","role","supplierId","data","setItem","stringify","signup","formData","log","phone","address","sname","scontact","company_name","_error$response","message","logout","removeItem","getRole"],"sources":["/Users/rajath/Desktop/dbproject/frontend/src/services/auth.service.js"],"sourcesContent":["import api from '../utils/axios.config';\n\nconst getCurrentUser = () => {\n  const token = localStorage.getItem('token');\n  const userData = localStorage.getItem('userData');\n  \n  if (!userData) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(userData);\n  } catch (error) {\n    console.error('Error parsing user data:', error);\n    return null;\n  }\n};\n\nconst AuthService = {\n  login: async (username, password) => {\n    try {\n      const response = await api.post('/auth/login', { username, password });\n      const { token, role, supplierId } = response.data;\n      \n      // Store all necessary data\n      localStorage.setItem('token', token);\n      localStorage.setItem('userData', JSON.stringify({ role, supplierId }));\n      \n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  signup: async (formData) => {\n    try {\n        console.log(\"form\",formData);\n      const response = await api.post('/auth/register', {\n        username: formData.username,\n        password: formData.password,\n        role: formData.role,\n        phone: formData.phone,\n        address: formData.address,\n        sname: formData.sname,\n        scontact: formData.scontact,\n        company_name: formData.company_name\n      });\n      return response.data;\n    } catch (error) {\n      throw error.response?.data || error.message;\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  },\n\n  getCurrentUser,\n\n  getRole: () => {\n    return localStorage.getItem('role');\n  }\n};\n\nexport default AuthService;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,uBAAuB;AAEvC,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EAEjD,IAAI,CAACC,QAAQ,EAAE;IACb,OAAO,IAAI;EACb;EAEA,IAAI;IACF,OAAOC,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC;EAC7B,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,IAAI;EACb;AACF,CAAC;AAED,MAAME,WAAW,GAAG;EAClBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,aAAa,EAAE;QAAEH,QAAQ;QAAEC;MAAS,CAAC,CAAC;MACtE,MAAM;QAAEX,KAAK;QAAEc,IAAI;QAAEC;MAAW,CAAC,GAAGH,QAAQ,CAACI,IAAI;;MAEjD;MACAf,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAEjB,KAAK,CAAC;MACpCC,YAAY,CAACgB,OAAO,CAAC,UAAU,EAAEb,IAAI,CAACc,SAAS,CAAC;QAAEJ,IAAI;QAAEC;MAAW,CAAC,CAAC,CAAC;MAEtE,OAAOH,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOV,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAEDa,MAAM,EAAE,MAAOC,QAAQ,IAAK;IAC1B,IAAI;MACAb,OAAO,CAACc,GAAG,CAAC,MAAM,EAACD,QAAQ,CAAC;MAC9B,MAAMR,QAAQ,GAAG,MAAMd,GAAG,CAACe,IAAI,CAAC,gBAAgB,EAAE;QAChDH,QAAQ,EAAEU,QAAQ,CAACV,QAAQ;QAC3BC,QAAQ,EAAES,QAAQ,CAACT,QAAQ;QAC3BG,IAAI,EAAEM,QAAQ,CAACN,IAAI;QACnBQ,KAAK,EAAEF,QAAQ,CAACE,KAAK;QACrBC,OAAO,EAAEH,QAAQ,CAACG,OAAO;QACzBC,KAAK,EAAEJ,QAAQ,CAACI,KAAK;QACrBC,QAAQ,EAAEL,QAAQ,CAACK,QAAQ;QAC3BC,YAAY,EAAEN,QAAQ,CAACM;MACzB,CAAC,CAAC;MACF,OAAOd,QAAQ,CAACI,IAAI;IACtB,CAAC,CAAC,OAAOV,KAAK,EAAE;MAAA,IAAAqB,eAAA;MACd,MAAM,EAAAA,eAAA,GAAArB,KAAK,CAACM,QAAQ,cAAAe,eAAA,uBAAdA,eAAA,CAAgBX,IAAI,KAAIV,KAAK,CAACsB,OAAO;IAC7C;EACF,CAAC;EAEDC,MAAM,EAAEA,CAAA,KAAM;IACZ5B,YAAY,CAAC6B,UAAU,CAAC,OAAO,CAAC;IAChC7B,YAAY,CAAC6B,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED/B,cAAc;EAEdgC,OAAO,EAAEA,CAAA,KAAM;IACb,OAAO9B,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACrC;AACF,CAAC;AAED,eAAeM,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}